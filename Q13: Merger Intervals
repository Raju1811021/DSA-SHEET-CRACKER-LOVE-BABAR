int isOverlap(vector<int>& v1,vector<int>& v2){
    for(int i=v1[1];i>=v1[0];i--){
        if(i>=v2[0] && i<=v2[1]){
            return(1);
        }
    }
    return(0);
}
vector<vector<int>> MergeIntervals(vector<vector<int>>& intervals){
    vector<vector<int>> temp;
    if(intervals.size()==1){
        return(intervals);
    }
    for(int i=0;i<intervals.size()-1;i++){
        if(isOverlap(intervals[i],intervals[i+1])){
            vector<int> t;
            t.push_back(intervals[i][0]<intervals[i+1][0]?intervals[i][0]:intervals[i+1][0]);
            t.push_back(intervals[i][1]>intervals[i+1][1]?intervals[i][1]:intervals[i+1][1]);
            temp.push_back(t);
            i++;
        }
        else{
            if((i+2)==intervals.size()){
                temp.push_back(intervals[i]); 
                temp.push_back(intervals[i+1]); 
            }
            else{
               temp.push_back(intervals[i]);  
            }
        }
    }
    return(temp);
}
